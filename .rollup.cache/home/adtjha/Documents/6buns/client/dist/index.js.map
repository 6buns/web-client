{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { io, Socket } from \"socket.io-client\";\nimport debug from \"debug\";\nimport { EventEmitter } from \"events\";\n\nconst s: debug.Debugger = debug(\"Socket\");\nconst p: debug.Debugger = debug(\"Peer\");\nconst rp: debug.Debugger = debug(\"Remote\");\n\nclass Bun extends EventEmitter {\n  apiKey: String;\n  hasVideo?: boolean;\n  hasAudio?: boolean;\n  media: { video: boolean; audio: boolean };\n  room: string;\n  name: string;\n  poster: string;\n  buffer: number;\n  socket: Socket;\n  peers: Map<string, CustomPeerConnection>;\n  iceServers: Array<RTCIceServer>;\n  streams: MediaStream;\n  remoteStreams: Map<string, readonly MediaStream[]>;\n\n  constructor({\n    apiKey,\n    hasVideo,\n    hasAudio,\n  }: {\n    apiKey: string;\n    hasVideo?: boolean;\n    hasAudio?: boolean;\n  }) {\n    super();\n    this.apiKey = apiKey;\n    this.hasAudio = hasAudio || true;\n    this.hasVideo = hasVideo || true;\n    this.media = {\n      video: this.hasVideo,\n      audio: this.hasAudio,\n    };\n    this.getMedia(this.hasVideo, this.hasAudio);\n    this.name = btoa(Math.random().toString()).substring(10, 5);\n    this.poster = this.createPoster(this.name);\n    this.streams = new MediaStream();\n    this.room = \"\";\n    this.buffer = 50;\n    this.remoteStreams = new Map();\n    this.peers = new Map();\n    this.iceServers = [];\n\n    this.socket = io(\"https://p2p.6buns.com\", {\n      transports: [\"websocket\", \"polling\"],\n      auth: {\n        key: this.apiKey,\n      },\n    });\n\n    this.socket.on(\n      \"connection\",\n      (id: string, users: number, iceServers: Array<RTCIceServer>) => {\n        s(\"Socket Connected\", { id, users, iceServers });\n        this.iceServers = [...iceServers];\n      }\n    );\n\n    this.socket.on(\"new-peer-connected\", (id: string) => {\n      if (id !== this.socket.id) {\n        s(\"New Peer Connected. Waiting for an offer\");\n        this.peers.set(\n          id,\n          new RTCPeerConnection({\n            iceServers: this.iceServers,\n          }) as CustomPeerConnection\n        );\n\n        const peer = this.peers.get(id);\n\n        rp(\"Adding Tracks\");\n        this.streams.getTracks().forEach((track) => {\n          peer.addTrack(track, this.streams);\n        });\n        rp(\"Tracks Added\");\n\n        peer.ontrack = (\n          event: CustomPeerConnectionTrackEvent<RTCTrackEvent>\n        ) => {\n          const { to } = event.target as CustomPeerConnection;\n          this.remoteStreams.set(to, event.streams);\n          this.emit(\"new-remote-track\", event);\n        };\n\n        peer.onicecandidate = (event: CustomPeerConnectionIceEvent) => {\n          if (event.candidate) {\n            rp(\"ICE Candidate\", event);\n            const pe = event.currentTarget as CustomPeerConnection;\n            this.socket.emit(\"data\", {\n              from: pe.from,\n              to: pe.to,\n              data: {\n                candidate: event.candidate,\n              },\n            });\n          }\n        };\n\n        peer.onnegotiationneeded = async (event: Event) => {\n          const pe = event.currentTarget as CustomPeerConnection;\n          try {\n            pe.makingOffer = true;\n            rp(\"Negotiation needed\", event);\n\n            const offer = await pe.createOffer();\n            rp(\"Offer Generated\", offer);\n\n            if (pe.signalingState != \"stable\") return;\n\n            await pe.setLocalDescription(offer);\n            rp(\"Local Description Set\", pe.localDescription);\n\n            pe.socket.emit(\"data\", {\n              to: pe.to,\n              from: pe.from,\n              data: {\n                sdp: pe.localDescription,\n              },\n            });\n          } catch (error) {\n            console.error(new Error(error));\n          } finally {\n            pe.makingOffer = false;\n          }\n        };\n\n        peer.from = this.socket.id;\n        peer.to = id;\n        peer.initiator = false;\n        peer.ignoreOffer = false;\n        peer.makingOffer = false;\n        peer.socket = this.socket;\n      }\n    });\n\n    this.socket.on(\n      \"data\",\n      async ({ to, from, data: { sdp, candidate } }: Data) => {\n        if (this.peers.has(from) && to === this.socket.id) {\n          try {\n            const peer = this.peers.get(from);\n\n            if (sdp) {\n              const offerCollision =\n                sdp.type === \"offer\" &&\n                (peer.makingOffer || peer.signalingState !== \"stable\");\n\n              peer.ignoreOffer = !peer.initiator && offerCollision;\n\n              if (peer.ignoreOffer) return;\n\n              if (offerCollision) {\n                await Promise.all([\n                  peer.setLocalDescription({ type: \"rollback\" }),\n                  peer.setRemoteDescription(sdp),\n                ]);\n              } else {\n                p(\"Answer Recieved\", sdp);\n                await peer.setRemoteDescription(sdp);\n              }\n              if (sdp.type === \"offer\") {\n                const answer = await peer.createAnswer();\n                p(\"Answer Created\", answer);\n\n                await peer.setLocalDescription(answer);\n                p(\"Local description set as answer\", peer.localDescription);\n\n                this.socket.emit(\"data\", {\n                  to: from,\n                  from: to,\n                  data: {\n                    sdp: peer.localDescription,\n                  },\n                });\n              }\n            } else if (candidate) {\n              try {\n                await peer.addIceCandidate(candidate);\n                p(\"Added Ice Candidate\", candidate);\n              } catch (e) {\n                if (!peer.ignoreOffer) p(\"Error adding IceCandidate\", e);\n                else\n                  p(\n                    \"Should be ignored\",\n                    e,\n                    candidate,\n                    this.peers.has(from),\n                    to === this.socket.id\n                  );\n              }\n            }\n          } catch (error) {\n            s(\"Socket Error\", error);\n          }\n        }\n      }\n    );\n\n    this.socket.on(\n      \"track-update\",\n      ({ id, update }: { id: string; update: string }) => {\n        s(\"Track Update Recieved\", id, update);\n        switch (update) {\n          case \"mute\":\n            this.emit(\"remote-peer-track-muted\", id);\n            break;\n          case \"unmute\":\n            this.emit(\"remote-peer-track-unmuted\", id);\n            break;\n          case \"end\":\n            this.emit(\"remote-peer-track-ended\", id);\n            break;\n          default:\n            break;\n        }\n      }\n    );\n\n    this.socket.on(\"peer-disconneted\", (id: string) => {\n      let peer = this.peers.get(id);\n      s(\"Socket Disconnected\", peer);\n\n      this.emit(\"peer-left\", peer.to);\n\n      peer.close();\n      rp(\"Remote Peer Connection Closed\");\n\n      this.peers.delete(id);\n      rp(\"Remote Peer Removed\");\n    });\n  }\n\n  join = async (room: string) => {\n    this.room = room;\n\n    await new Promise<void>((resolve, reject) => {\n      s(\"Joining Room\");\n      this.socket.emit(\"join-room\", room, (peerList: Array<keyof Socket>) => {\n        s(\"Room Joined\", peerList);\n        if (peerList.length > 1) {\n          s(\"Peers List Recieved\");\n          peerList.forEach((pid) => {\n            if (pid !== this.socket.id) {\n              try {\n                this.peers.set(\n                  pid,\n                  new RTCPeerConnection({\n                    iceServers: this.iceServers,\n                  }) as CustomPeerConnection\n                );\n              } catch (error) {\n                throw new Error(error);\n              }\n\n              const newPeer = this.peers.get(pid);\n\n              p(\"Adding Tracks\");\n              this.streams.getTracks().forEach((track) => {\n                newPeer.addTrack(track, this.streams);\n              });\n              p(\"Tracks Added\");\n\n              newPeer.ontrack = (\n                event: CustomPeerConnectionTrackEvent<RTCTrackEvent>\n              ) => {\n                const { to } = event.target as CustomPeerConnection;\n                this.remoteStreams.set(to, event.streams);\n                this.emit(\"new-remote-track\", event);\n              };\n\n              newPeer.onicecandidate = (\n                event: CustomPeerConnectionIceEvent\n              ) => {\n                if (event.candidate) {\n                  p(\"ICE Candidate\", event);\n                  const pe = event.currentTarget as CustomPeerConnection;\n                  this.socket.emit(\"data\", {\n                    from: pe.from,\n                    to: pe.to,\n                    data: {\n                      candidate: event.candidate,\n                    },\n                  });\n                }\n              };\n\n              newPeer.onnegotiationneeded = async (event: Event) => {\n                const pe = event.currentTarget as CustomPeerConnection;\n                try {\n                  pe.makingOffer = true;\n                  p(\"Negotiation needed\", event);\n\n                  const offer = await pe.createOffer();\n                  p(\"Offer Generated\", offer);\n\n                  if (pe.signalingState != \"stable\") return;\n\n                  await pe.setLocalDescription(offer);\n                  p(\"Local Description Set\", pe.localDescription);\n\n                  pe.socket.emit(\"data\", {\n                    to: pe.to,\n                    from: pe.from,\n                    data: {\n                      sdp: pe.localDescription,\n                    },\n                  });\n                } catch (error) {\n                  console.error(new Error(error));\n                } finally {\n                  pe.makingOffer = false;\n                }\n              };\n\n              newPeer.from = this.socket.id;\n              newPeer.to = pid;\n              newPeer.initiator = true;\n              newPeer.ignoreOffer = false;\n              newPeer.makingOffer = false;\n              newPeer.socket = this.socket;\n            }\n          });\n          p(\"Establishing Peer Connection to Remote Peer.\");\n          resolve();\n        }\n      });\n    });\n  };\n\n  addMediaTrack = (track: MediaStreamTrack) => {\n    this.streams.addTrack(track);\n    if (this.peers.size > 0) {\n      for (const [id, peer] of this.peers) {\n        peer.addTrack(track);\n      }\n    }\n  };\n\n  addMedia = (stream: MediaStream) => {\n    stream.getTracks().forEach((track) => this.addMediaTrack(track));\n    p(\"Added new Stream\", this.peers);\n  };\n\n  removeMediaTrack = (track: MediaStreamTrack) => {\n    for (const [id, peer] of this.peers) {\n      peer.getSenders().forEach((rtpSender) => {\n        if (rtpSender?.track?.kind === track.kind) {\n          peer.removeTrack(rtpSender);\n          this.socket.emit(\"track-update\", {\n            id: peer.from,\n            update: \"end\",\n            room: this.room,\n          });\n        }\n      });\n    }\n    this.streams.removeTrack(track);\n  };\n\n  removeMedia = (stream: MediaStream) => {\n    stream.getTracks().forEach((track) => this.removeMediaTrack(track));\n    p(\"Removed Stream\", stream);\n  };\n\n  getMedia = (video: boolean, audio: boolean) =>\n    navigator.mediaDevices\n      .getUserMedia({\n        video,\n        audio,\n      })\n      .then((stream) => {\n        p(stream);\n        this.addStream(stream);\n        this.addMedia(stream);\n      })\n      .catch(console.error);\n\n  screenShare = () =>\n    navigator.mediaDevices\n      // @ts-ignore\n      .getDisplayMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        const track = stream.getVideoTracks()[0];\n        p(\"Sharing Screen\", track);\n\n        track.onended = (ev) => {\n          p(\"Stop Sharing Screen\");\n          this.emit(\"screen-share-ended\", ev);\n          this.switchToCam();\n        };\n\n        this.removeMedia(this.streams);\n        this.addMedia(stream);\n        this.addStream(stream);\n      })\n      .catch(console.error);\n\n  switchToCam = () => {\n    this.removeMedia(this.streams);\n    this.getMedia(this.media.video, this.media.audio);\n  };\n\n  addStream = (stream: MediaStream) => {\n    const video: HTMLVideoElement = document.querySelector(\".self\");\n    video.srcObject = stream;\n    video.onloadedmetadata = (ev) => {\n      video.play();\n    };\n  };\n\n  stopMedia = (mediaType?: string, peerId?: string) => {\n    if (mediaType) {\n      switch (mediaType) {\n        case \"video\":\n          this.streams.getVideoTracks().forEach((track) => {\n            this.removeMediaTrack(track);\n            const video: HTMLVideoElement = document.querySelector(\".self\");\n            video.srcObject = null;\n            track.stop();\n          });\n          break;\n        case \"audio\":\n          this.streams.getAudioTracks().forEach((track) => {\n            this.removeMediaTrack(track);\n            track.stop();\n          });\n          break;\n        case \"screen\":\n          this.streams.getVideoTracks().forEach((track) => {\n            this.removeMediaTrack(track);\n            track.stop();\n          });\n          break;\n        case \"all\":\n          this.streams.getTracks().forEach((track) => {\n            this.removeMediaTrack(track);\n            const video: HTMLVideoElement = document.querySelector(\".self\");\n            video.srcObject = null;\n            track.stop();\n          });\n          break;\n      }\n    }\n\n    if (peerId) {\n      this.peers\n        .get(peerId)\n        .getSenders()\n        .forEach((rtpSender) => {\n          if (mediaType) {\n            if (rtpSender?.track?.kind === mediaType) rtpSender.track.stop();\n          } else {\n            rtpSender?.track?.stop();\n          }\n        });\n    }\n  };\n\n  createPoster = (name: string): string => {\n    let canv: HTMLCanvasElement = document.createElement(\"canvas\");\n\n    canv.id = \"canv\";\n    canv.height = 600;\n    canv.width = 800;\n\n    document.body.appendChild(canv);\n\n    let canve = <HTMLCanvasElement>document.getElementById(\"canv\");\n\n    const ctx: CanvasRenderingContext2D = canve.getContext(\"2d\");\n\n    ctx.fillStyle = \"#1C1917\";\n    ctx.fillRect(0, 0, 800, 600);\n\n    ctx.fillStyle = \"#FAFAF9\";\n    ctx.textAlign = \"center\";\n    ctx.font = \"64px sans-serif\";\n    ctx.fillText(name, 400, 300);\n\n    const uri = canv.toDataURL();\n\n    document.body.removeChild(canv);\n\n    return uri;\n  };\n}\n\ninterface CustomPeerConnection extends RTCPeerConnection {\n  from: string;\n  to: string;\n  initiator: boolean;\n  ignoreOffer: boolean;\n  makingOffer: boolean;\n  socket: Socket;\n}\n\ntype CustomPeerConnectionTrackEvent<T> = RTCTrackEvent;\ntype CustomPeerConnectionIceEvent = RTCPeerConnectionIceEvent;\n\ninterface Data {\n  to: string;\n  from: string;\n  data: {\n    sdp: RTCSessionDescription;\n    candidate: RTCIceCandidate;\n  };\n}\n\nexport default Bun;\n"]}